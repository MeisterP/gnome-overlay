From 3b3fc42546f89b2c5c160092044e829119e56c3c Mon Sep 17 00:00:00 2001
From: Poncho <poncho@spahan.ch>
Date: Thu, 14 Mar 2019 10:22:22 +0100
Subject: [PATCH 6/7] make gnome-online-accounts optional

---
 meson.build                             | 15 ++++++++++++++-
 meson_options.txt                       |  2 ++
 panels/background/bg-pictures-source.c  | 20 ++++++++++++++++++++
 panels/background/meson.build           |  7 +++++--
 panels/meson.build                      |  5 ++++-
 panels/user-accounts/cc-realm-manager.c |  2 +-
 shell/cc-panel-loader.c                 |  4 ++++
 7 files changed, 50 insertions(+), 5 deletions(-)

diff --git a/meson.build b/meson.build
index a1404b3a0..a15c35e22 100644
--- a/meson.build
+++ b/meson.build
@@ -122,7 +122,7 @@ gio_dep = dependency('gio-2.0')
 glib_dep = dependency('glib-2.0', version: '>= 2.53.0')
 gnome_desktop_dep = dependency('gnome-desktop-3.0', version: '>= 3.27.90')
 gnome_settings_dep = dependency('gnome-settings-daemon', version: '>= 3.25.90')
-goa_dep = dependency('goa-1.0', version: goa_req_version)
+goa_dep = dependency('goa-1.0', version: goa_req_version, required: get_option('goa'))
 gsettings_desktop_dep = dependency('gsettings-desktop-schemas', version: '>= 3.31.0')
 libxml_dep = dependency('libxml-2.0')
 polkit_gobject_dep = dependency('polkit-gobject-1', version: '>= 0.103')
@@ -134,6 +134,19 @@ xi_dep = dependency('xi', version: '>= 1.2')
 
 m_dep = cc.find_library('m')
 
+enable_goa = goa_dep.found()
+config_h.set('BUILD_GOA', enable_goa,
+             description: 'Define to 1 to build the Online Accounts panel')
+
+grilo_dep = dependency('grilo-0.3', version: '>= 0.3.0', required: get_option('grilo'))
+enable_grilo = grilo_dep.found()
+config_h.set('HAVE_GRILO', enable_grilo,
+             description: 'Define to 1 to enable grilo support')
+
+if enable_grilo and not enable_goa
+  error('Grilo support requires goa')
+endif
+
 common_deps = [
   gio_dep,
   glib_dep,
diff --git a/meson_options.txt b/meson_options.txt
index f226810c8..3d127890b 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -2,6 +2,8 @@ option('cheese', type: 'boolean', value: true, description: 'build with cheese w
 option('cups', type: 'feature', value: 'auto', description: 'build with CUPS support')
 option('documentation', type: 'boolean', value: false, description: 'build documentation')
 option('gnome_session_libexecdir', type: 'string', value: '', description: 'Directory for gnome-session\'s libexecdir')
+option('goa', type: 'feature', value: 'auto', description: 'build with gnome-online-accounts support')
+option('grilo', type: 'feature', value: 'auto', description: 'build with grilo support (background panel)')
 option('ibus', type: 'boolean', value: true, description: 'build with IBus support')
 option('tracing', type: 'boolean', value: false, description: 'add extra debugging information')
 option('kerberos', type: 'feature', value: 'auto', description: 'build with kerberos support')
diff --git a/panels/background/bg-pictures-source.c b/panels/background/bg-pictures-source.c
index 714c7f744..db6248d57 100644
--- a/panels/background/bg-pictures-source.c
+++ b/panels/background/bg-pictures-source.c
@@ -23,13 +23,17 @@
 
 #include "bg-pictures-source.h"
 
+#ifdef HAVE_GRILO
 #include "cc-background-grilo-miner.h"
+#endif
 #include "cc-background-item.h"
 
 #include <string.h>
 #include <cairo-gobject.h>
 #include <gio/gio.h>
+#ifdef HAVE_GRILO
 #include <grilo.h>
+#endif
 #include <libgnome-desktop/gnome-desktop-thumbnail.h>
 #include <gdesktop-enums.h>
 
@@ -43,7 +47,9 @@ struct _BgPicturesSource
 
   GCancellable *cancellable;
 
+#ifdef HAVE_GRILO
   CcBackgroundGriloMiner *grl_miner;
+#endif
 
   GnomeDesktopThumbnailFactory *thumb_factory;
 
@@ -85,7 +91,9 @@ bg_pictures_source_dispose (GObject *object)
       g_clear_object (&source->cancellable);
     }
 
+#ifdef HAVE_GRILO
   g_clear_object (&source->grl_miner);
+#endif
   g_clear_object (&source->thumb_factory);
 
   G_OBJECT_CLASS (bg_pictures_source_parent_class)->dispose (object);
@@ -461,7 +469,9 @@ add_single_file (BgPicturesSource     *bg_source,
   const gchar *pictures_path;
   g_autoptr(GFile) pictures_dir = NULL;
   g_autoptr(GFile) cache_dir = NULL;
+#ifdef HAVE_GRILO
   GrlMedia *media;
+#endif
 
   /* find png and jpeg files */
   if (!content_type)
@@ -520,14 +530,17 @@ add_single_file (BgPicturesSource     *bg_source,
 
  read_file:
 
+#ifdef HAVE_GRILO
   media = g_object_get_data (G_OBJECT (file), "grl-media");
   if (media == NULL)
+#endif
     {
       g_object_set_data_full (G_OBJECT (file), "item", g_object_ref (item), g_object_unref);
       g_file_read_async (file, G_PRIORITY_DEFAULT,
                          bg_source->cancellable,
                          picture_opened_for_read, bg_source);
     }
+#ifdef HAVE_GRILO
   else
     {
       g_autoptr(GFile) native_file = NULL;
@@ -564,6 +577,7 @@ add_single_file (BgPicturesSource     *bg_source,
                          picture_copied_for_read,
                          bg_source);
     }
+#endif
 
   retval = TRUE;
 
@@ -594,6 +608,7 @@ add_single_file_from_info (BgPicturesSource     *bg_source,
   return add_single_file (bg_source, file, content_type, mtime, ret_row_ref);
 }
 
+#ifdef HAVE_GRILO
 static gboolean
 add_single_file_from_media (BgPicturesSource *bg_source,
                             GFile            *file,
@@ -618,6 +633,7 @@ add_single_file_from_media (BgPicturesSource *bg_source,
 
   return add_single_file (bg_source, file, content_type, (guint64) mtime_unix, NULL);
 }
+#endif
 
 gboolean
 bg_pictures_source_add (BgPicturesSource     *bg_source,
@@ -934,6 +950,7 @@ monitor_path (BgPicturesSource *self,
   return monitor;
 }
 
+#ifdef HAVE_GRILO
 static void
 media_found_cb (BgPicturesSource *self, GrlMedia *media)
 {
@@ -945,6 +962,7 @@ media_found_cb (BgPicturesSource *self, GrlMedia *media)
   g_object_set_data_full (G_OBJECT (file), "grl-media", g_object_ref (media), g_object_unref);
   add_single_file_from_media (self, file, media);
 }
+#endif
 
 static void
 bg_pictures_source_init (BgPicturesSource *self)
@@ -968,9 +986,11 @@ bg_pictures_source_init (BgPicturesSource *self)
   cache_path = bg_pictures_source_get_cache_path ();
   self->cache_dir_monitor = monitor_path (self, cache_path);
 
+#ifdef HAVE_GRILO
   self->grl_miner = cc_background_grilo_miner_new ();
   g_signal_connect_swapped (self->grl_miner, "media-found", G_CALLBACK (media_found_cb), self);
   cc_background_grilo_miner_start (self->grl_miner);
+#endif
 
   self->thumb_factory =
     gnome_desktop_thumbnail_factory_new (GNOME_DESKTOP_THUMBNAIL_SIZE_LARGE);
diff --git a/panels/background/meson.build b/panels/background/meson.build
index bb34b69fb..c82a83752 100644
--- a/panels/background/meson.build
+++ b/panels/background/meson.build
@@ -75,18 +75,21 @@ sources = common_sources + files(
   'bg-source.c',
   'bg-wallpapers-source.c',
   'cc-background-chooser-dialog.c',
-  'cc-background-grilo-miner.c',
   'cc-background-item.c',
   'cc-background-xml.c'
 )
 
+if enable_grilo
+  sources += files('cc-background-grilo-miner.c')
+endif
+
 deps = common_deps + [
   gdk_pixbuf_dep,
   gnome_desktop_dep,
   goa_dep,
   libxml_dep,
   dependency('cairo-gobject'),
-  dependency('grilo-0.3', version: '>= 0.3.0')
+  grilo_dep
 ]
 
 cflags += [
diff --git a/panels/meson.build b/panels/meson.build
index 5b1bfdb8f..df80e2d70 100644
--- a/panels/meson.build
+++ b/panels/meson.build
@@ -10,7 +10,6 @@ panels = [
   'keyboard',
   'mouse',
   'notifications',
-  'online-accounts',
   'power',
   'privacy',
   'region',
@@ -29,6 +28,10 @@ if enable_cups
   panels += ['printers']
 endif
 
+if enable_goa
+  panels += ['online-accounts']
+endif
+
 if enable_network
   panels += ['network']
 endif
diff --git a/panels/user-accounts/cc-realm-manager.c b/panels/user-accounts/cc-realm-manager.c
index 04dec9b5c..8b5421ece 100644
--- a/panels/user-accounts/cc-realm-manager.c
+++ b/panels/user-accounts/cc-realm-manager.c
@@ -769,7 +769,7 @@ kinit_thread_func (GTask *task,
 
         g_object_unref (task);
 #else
-        g_simple_async_result_set_error (async, UM_REALM_ERROR, UM_REALM_ERROR_GENERIC,
+        g_task_return_new_error (task, CC_REALM_ERROR, CC_REALM_ERROR_GENERIC,
                                          _("gnome-control-center was built without kerberos support"));
 #endif
 }
diff --git a/shell/cc-panel-loader.c b/shell/cc-panel-loader.c
index 1fc5eb73b..f929abb99 100644
--- a/shell/cc-panel-loader.c
+++ b/shell/cc-panel-loader.c
@@ -49,7 +49,9 @@ extern GType cc_network_panel_get_type (void);
 extern GType cc_wifi_panel_get_type (void);
 #endif /* BUILD_NETWORK */
 extern GType cc_notifications_panel_get_type (void);
+#ifdef BUILD_GOA
 extern GType cc_goa_panel_get_type (void);
+#endif /* BUILD_GOA */
 extern GType cc_power_panel_get_type (void);
 #ifdef BUILD_PRINTERS
 extern GType cc_printers_panel_get_type (void);
@@ -104,7 +106,9 @@ static CcPanelLoaderVtable default_panels[] =
   PANEL_TYPE("wifi",             cc_wifi_panel_get_type,                 cc_wifi_panel_static_init_func),
 #endif
   PANEL_TYPE("notifications",    cc_notifications_panel_get_type,        NULL),
+#ifdef BUILD_GOA
   PANEL_TYPE("online-accounts",  cc_goa_panel_get_type,                  NULL),
+#endif
   PANEL_TYPE("power",            cc_power_panel_get_type,                NULL),
 #ifdef BUILD_PRINTERS
   PANEL_TYPE("printers",         cc_printers_panel_get_type,             NULL),
-- 
2.19.2

