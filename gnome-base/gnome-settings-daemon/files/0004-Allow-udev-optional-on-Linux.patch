From 4e1c4b7c7ef10c63b24cf57116b451f7a92a7525 Mon Sep 17 00:00:00 2001
From: Mart Raudsepp <leio@gentoo.org>
Date: Sun, 8 Sep 2019 18:13:55 +0300
Subject: [PATCH] Allow udev optional on Linux

---
 meson.build                   |  4 ----
 plugins/power/gsd-backlight.c | 28 ++++++++++++++--------------
 plugins/power/meson.build     |  6 +++---
 3 files changed, 17 insertions(+), 21 deletions(-)

diff --git a/meson.build b/meson.build
index d71a40a8..1cc8a30f 100644
--- a/meson.build
+++ b/meson.build
@@ -122,9 +122,6 @@ if enable_gudev
   gudev_dep = dependency('gudev-1.0')
 endif
 config_h.set10('HAVE_GUDEV', enable_gudev)
-if host_is_linux
-  assert(enable_gudev, 'GUdev is not optional on Linux platforms')
-endif
 
 # Check for colord
 enable_colord = get_option('colord')
@@ -185,7 +182,6 @@ endif
 
 # Rfkill
 enable_rfkill = get_option('rfkill')
-assert(enable_rfkill or not host_is_linux, 'rfkill is not optional on Linux platforms')
 if enable_rfkill
   assert(cc.has_header('linux/rfkill.h'), 'rfkill support requested but RFKill headers not found')
   assert(enable_gudev, 'GUdev is required for rfkill support')
diff --git a/plugins/power/gsd-backlight.c b/plugins/power/gsd-backlight.c
index d7d10fd2..c8d68e9e 100644
--- a/plugins/power/gsd-backlight.c
+++ b/plugins/power/gsd-backlight.c
@@ -25,9 +25,9 @@
 #include "gsd-power-constants.h"
 #include "gsd-power-manager.h"
 
-#ifdef __linux__
+#if defined(__linux__) && defined(HAVE_GUDEV)
 #include <gudev/gudev.h>
-#endif /* __linux__ */
+#endif /* __linux__ && HAVE_GUDEV */
 
 struct _GsdBacklight
 {
@@ -39,7 +39,7 @@ struct _GsdBacklight
         gint brightness_target;
         gint brightness_step;
 
-#ifdef __linux__
+#if defined(__linux__) && defined(HAVE_GUDEV)
         GUdevClient *udev;
         GUdevDevice *udev_device;
 
@@ -47,7 +47,7 @@ struct _GsdBacklight
         GQueue tasks;
 
         gint idle_update;
-#endif /* __linux__ */
+#endif /* __linux__ && HAVE_GUDEV */
 
         GnomeRRScreen *rr_screen;
         gboolean builtin_display_disabled;
@@ -71,7 +71,7 @@ G_DEFINE_TYPE_EXTENDED (GsdBacklight, gsd_backlight, G_TYPE_OBJECT, 0,
                         G_IMPLEMENT_INTERFACE (G_TYPE_INITABLE,
                                                gsd_backlight_initable_iface_init);)
 
-#ifdef __linux__
+#if defined(__linux__) && defined(HAVE_GUDEV)
 static GUdevDevice*
 gsd_backlight_udev_get_type (GList *devices, const gchar *type)
 {
@@ -396,7 +396,7 @@ gsd_backlight_process_taskqueue (GsdBacklight *backlight)
         /* And run it! */
         gsd_backlight_run_set_helper (backlight, to_run);
 }
-#endif /* __linux__ */
+#endif /* __linux__ && HAVE_GUDEV */
 
 static GnomeRROutput*
 gsd_backlight_rr_find_output (GsdBacklight *backlight, gboolean controllable)
@@ -471,7 +471,7 @@ gsd_backlight_set_brightness_val_async (GsdBacklight *backlight,
 
         task = g_task_new (backlight, cancellable, callback, user_data);
 
-#ifdef __linux__
+#if defined(__linux__) && defined(HAVE_GUDEV)
         if (backlight->udev_device != NULL) {
                 BacklightHelperData *task_data;
 
@@ -485,7 +485,7 @@ gsd_backlight_set_brightness_val_async (GsdBacklight *backlight,
 
                 return;
         }
-#endif /* __linux__ */
+#endif /* __linux__ && HAVE_GUDEV */
 
         /* Fallback to setting via GNOME RR/X11 */
         output = gsd_backlight_rr_find_output (backlight, TRUE);
@@ -748,11 +748,11 @@ gsd_backlight_initable_init (GInitable       *initable,
                 return FALSE;
         }
 
-#ifdef __linux__
+#if defined(__linux__) && defined(HAVE_GUDEV)
         /* Try finding a udev device. */
         if (gsd_backlight_udev_init (backlight))
                 goto found;
-#endif /* __linux__ */
+#endif /* __linux__ && HAVE_GUDEV */
 
         /* Try GNOME RR as a fallback. */
         output = gsd_backlight_rr_find_output (backlight, TRUE);
@@ -787,7 +787,7 @@ gsd_backlight_finalize (GObject *object)
 {
         GsdBacklight *backlight = GSD_BACKLIGHT (object);
 
-#ifdef __linux__
+#if defined(__linux__) && defined(HAVE_GUDEV)
         g_assert (backlight->active_task == NULL);
         g_assert (g_queue_is_empty (&backlight->tasks));
         g_clear_object (&backlight->udev);
@@ -796,7 +796,7 @@ gsd_backlight_finalize (GObject *object)
                 g_source_remove (backlight->idle_update);
                 backlight->idle_update = 0;
         }
-#endif /* __linux__ */
+#endif /* __linux__ && HAVE_GUDEV */
 
         g_clear_object (&backlight->rr_screen);
 }
@@ -839,10 +839,10 @@ gsd_backlight_init (GsdBacklight *backlight)
         backlight->brightness_val = -1;
         backlight->brightness_step = 1;
 
-#ifdef __linux__
+#if defined(__linux__) && defined(HAVE_GUDEV)
         backlight->active_task = NULL;
         g_queue_init (&backlight->tasks);
-#endif /* __linux__ */
+#endif /* __linux__ && HAVE_GUDEV */
 }
 
 GsdBacklight *
diff --git a/plugins/power/meson.build b/plugins/power/meson.build
index 8babf97f..30355219 100644
--- a/plugins/power/meson.build
+++ b/plugins/power/meson.build
@@ -24,7 +24,7 @@ native_deps = [
   dependency('gio-2.0', native:true)
 ]
 
-if host_is_linux
+if host_is_linux and enable_gudev
   deps += gudev_dep
 endif
 
@@ -66,7 +66,7 @@ gsd_power_enums_update = executable(
   native: true
 )
 
-if host_is_linux
+if host_is_linux and enable_gudev
   policy = 'org.gnome.settings-daemon.plugins.power.policy'
 
   policy_in = configure_file(
@@ -130,7 +130,7 @@ envs.set('BUILDDIR', meson.current_build_dir())
 envs.set('TOP_BUILDDIR', meson.build_root())
 envs.set('LD_PRELOAD', 'libumockdev-preload.so.0')
 envs.set('NO_AT_BRIDGE', '1')
-envs.set('HAVE_SYSFS_BACKLIGHT', host_is_linux ? '1' : '0')
+envs.set('HAVE_SYSFS_BACKLIGHT', (host_is_linux and enable_gudev) ? '1' : '0')
 
 if get_option('b_sanitize').split(',').contains('address')
   # libasan needs to be loaded first; so we need to explicitly preload it
-- 
2.20.1

